#include <iostream>
#include <cstring>

using namespace std;

const int costs[10][10] = {
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
    {0, 4, 3, 3, 4, 3, 2, 3, 1, 2}, // 0
    {4, 0, 5, 3, 2, 5, 6, 1, 5, 4}, // 1
    {3, 5, 0, 2, 5, 4, 3, 4, 2, 3}, // 2
    {3, 3, 2, 0, 3, 3, 3, 2, 2, 1}, // 3
    {4, 2, 5, 3, 0, 3, 4, 3, 3, 2}, // 4
    {3, 5, 4, 3, 3, 0, 1, 5, 2, 1}, // 5
    {2, 6, 3, 3, 4, 1, 0, 5, 1, 2}, // 6
    {3, 1, 4, 2, 3, 5, 5, 0, 4, 3}, // 7
    {1, 5, 2, 2, 3, 2, 1, 4, 0, 1}, // 8
    {2, 4, 3, 1, 2, 1, 2, 3, 1, 0}, // 9
};

int main()
{
    unsigned long long count = 0;
    int t1[7], t2[7];
    char befor[20], after[20];

    for (int i = 0; i < 7; ++i)
    {
        cin >> t2[i];
    }

    for (int i = 0; i < 7; ++i)
    {
        cin >> t1[i];
    }

    while (memcmp(t1, t2, sizeof(int) * 7) != 0)
    {
        sprintf(befor, "%02d%02d%02d%02d%02d%02d%02d", t2[0], t2[1], t2[2], t2[3], t2[4], t2[5], t2[6]);
        ++t2[6];
        if (t2[6] == 60)
        {
            t2[6] = 0;
            ++t2[5];
            if (t2[5] == 60)
            {
                t2[5] = 0;
                ++t2[4];
                if (t2[4] == 24)
                {
                    t2[4] = 0;
                    ++t2[3];
                    if (t2[3] == 30)
                    {
                        t2[3] = 1;
                        ++t2[2];
                        if (t2[2] == 12)
                        {
                            t2[2] = 1;
                            ++t2[1];
                            if (t2[1] == 100)
                            {
                                t2[1] = 0;
                                ++t2[0];
                            }
                        }
                    }
                }
            }
        }
        sprintf(after, "%02d%02d%02d%02d%02d%02d%02d", t2[0], t2[1], t2[2], t2[3], t2[4], t2[5], t2[6]);
        for (int i = 0; i < 14; ++i)
        {
            count += costs[befor[i] - '0'][after[i] - '0'];
        }
    }

    cout << count << endl;
    return 0;
}
